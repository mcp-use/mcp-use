{
  "name": "mcp-use",
  "type": "module",
  "version": "1.2.0-canary.6",
  "packageManager": "pnpm@10.6.1",
  "description": "Opinionated MCP Framework for TypeScript (@modelcontextprotocol/sdk compatible) - Build MCP Agents and Clients + MCP Servers with support for MCP-UI.",
  "author": "mcp-use, Inc.",
  "license": "MIT",
  "homepage": "https://github.com/mcp-use/mcp-use#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mcp-use/mcp-use.git"
  },
  "bugs": {
    "url": "https://github.com/mcp-use/mcp-use/issues"
  },
  "keywords": [
    "MCP",
    "Model Context Protocol",
    "Zod",
    "schema",
    "SDK",
    "eventsource",
    "AI",
    "utility",
    "typescript"
  ],
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js"
    },
    "./browser": {
      "types": "./dist/src/browser.d.ts",
      "import": "./dist/src/browser.js"
    },
    "./react": {
      "types": "./dist/src/react/index.d.ts",
      "import": "./dist/src/react/index.js"
    },
    "./server": {
      "types": "./dist/src/server/index.d.ts",
      "import": "./dist/src/server/index.js"
    }
  },
  "main": "./dist/index.js",
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "bin": {
    "mcp-use": "./node_modules/@mcp-use/cli/dist/index.js"
  },
  "files": [
    "dist"
  ],
  "engines": {
    "node": ">=22.0.0"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org",
    "access": "public"
  },
  "scripts": {
    "build": "rm -rf dist && tsup && tsc --emitDeclarationOnly --declaration",
    "test": "vitest",
    "test:run": "vitest run",
    "test:unit": "vitest run --exclude tests/integration/**",
    "test:simple": "vitest run tests/stream_events_simple.test.ts",
    "test:integration": "vitest run tests/integration",
    "test:integration:agent": "vitest run tests/integration/agent",
    "test:integration:run": "vitest run tests/integration/agent/test_agent_run.test.ts",
    "test:integration:stream": "vitest run tests/integration/agent/test_agent_stream.test.ts",
    "test:integration:structured": "vitest run tests/integration/agent/test_agent_structured_output.test.ts",
    "test:integration:manager": "vitest run tests/integration/agent/test_server_manager.test.ts",
    "test:integration:observability": "vitest run tests/integration/agent/test_agent_observability.test.ts",
    "watch": "tsc --watch",
    "start": "node dist/index.js",
    "prepublishOnly": "npm run build",
    "fmt": "eslint --fix",
    "release": "npm version patch --tag-version-prefix=v && git push --follow-tags",
    "release:minor": "npm version minor --tag-version-prefix=v && git push --follow-tags",
    "release:major": "npm version major --tag-version-prefix=v && git push --follow-tags",
    "prepare": "husky",
    "example:airbnb": "tsx examples/client/airbnb_use.ts",
    "example:browser": "tsx examples/client/browser_use.ts",
    "example:chat": "tsx examples/client/chat_example.ts",
    "example:stream": "tsx examples/client/stream_example.ts",
    "example:stream_events": "tsx examples/client/stream_events_example.ts",
    "example:ai_sdk": "tsx examples/client/ai_sdk_example.ts",
    "example:filesystem": "tsx examples/client/filesystem_use.ts",
    "example:http": "tsx examples/client/http_example.ts",
    "example:everything": "tsx examples/client/mcp_everything.ts",
    "example:multi": "tsx examples/client/multi_server_example.ts",
    "example:sandbox": "tsx examples/client/sandbox_everything.ts",
    "example:oauth": "tsx examples/client/simple_oauth_example.ts",
    "example:blender": "tsx examples/client/blender_use.ts",
    "example:add_server": "tsx examples/client/add_server_tool.ts",
    "example:structured": "tsx examples/client/structured_output.ts",
    "example:observability": "tsx examples/client/observability.ts"
  },
  "peerDependencies": {
    "@langchain/anthropic": "^1.0.0",
    "@langchain/openai": "^1.0.0",
    "cors": "^2.8.5",
    "express": "^4.18.2",
    "langfuse": "^3.38.6",
    "langfuse-langchain": "^3.38.6",
    "react": "^18.0.0 || ^19.0.0"
  },
  "peerDependenciesMeta": {
    "@langchain/anthropic": {
      "optional": true
    },
    "@langchain/openai": {
      "optional": true
    },
    "cors": {
      "optional": true
    },
    "express": {
      "optional": true
    },
    "langfuse": {
      "optional": true
    },
    "langfuse-langchain": {
      "optional": true
    }
  },
  "dependencies": {
    "@dmitryrechkin/json-schema-to-zod": "^1.0.1",
    "@langchain/core": "^1.0.1",
    "@mcp-ui/server": "^5.12.0",
    "@mcp-use/cli": "workspace:*",
    "@mcp-use/inspector": "workspace:*",
    "@modelcontextprotocol/sdk": "1.20.0",
    "@scarf/scarf": "^1.4.0",
    "@tailwindcss/vite": "^4.1.15",
    "@vitejs/plugin-react": "^5.0.4",
    "ai": "^4.3.19",
    "commander": "^14.0.1",
    "dotenv": "^16.5.0",
    "esbuild": ">=0.25.0",
    "langchain": "^1.0.1",
    "lodash-es": "^4.17.21",
    "posthog-node": "^5.1.1",
    "strict-url-sanitise": "^0.0.1",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.6",
    "uuid": "^11.1.0",
    "vite": ">=5.4.21",
    "winston": "^3.17.0",
    "winston-transport-browserconsole": "^1.0.5",
    "ws": "^8.18.2",
    "zod": "^3.25.48",
    "zod-to-json-schema": "^3.24.6"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^4.13.2",
    "@langchain/anthropic": "^1.0.0",
    "@langchain/openai": "^1.0.0",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "^20.19.8",
    "@types/react": "^19.2.2",
    "@types/ws": "^8.18.1",
    "cors": "^2.8.5",
    "eslint": "^9.28.0",
    "eslint-plugin-format": "^1.0.1",
    "express": "^4.18.2",
    "husky": "^9.1.7",
    "lint-staged": "^15.2.11",
    "react": "^19.2.0",
    "typescript": "^5.8.3",
    "vitest": "^3.2.4"
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint --fix",
      "eslint"
    ],
    "*.md": [
      "eslint --fix",
      "eslint"
    ]
  }
}
